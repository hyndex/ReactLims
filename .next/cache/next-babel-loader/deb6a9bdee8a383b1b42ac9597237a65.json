{"ast":null,"code":"var _jsxFileName = \"J:\\\\Project\\\\ReactLims\\\\pages\\\\Sample.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport App from '../Components/App';\nimport store from '../Reducers/Reducer';\nimport { Provider } from 'react-redux';\nimport fetch from 'isomorphic-unfetch';\nimport TableBody from '../Components/Table';\nimport SampleForm from '../Components/SampleForm';\nconst table_header = [\"Sample id\", \"client\", \"name\"];\n\nconst table_body = data => {\n  console.log(data);\n  const id = data.id;\n  const name = data.name;\n  const client = data.client.name;\n  return __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"th\", {\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, id), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, name), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, client));\n};\n\nexport default class Sample extends React.Component {\n  make_table(data) {\n    var table = [];\n\n    for (var key in data) {\n      table.push(table_body(data[key]));\n    }\n\n    return table;\n  }\n\n  render() {\n    const body = 'Welcome to Sample';\n    return __jsx(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(SampleForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), __jsx(App, {\n      body: __jsx(TableBody, {\n        header: table_header,\n        body: this.make_table(this.props.data),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n}\n\nSample.getInitialProps = async function () {\n  const res = await fetch('http://127.0.0.1:8000/lab/Sample/', {\n    method: 'GET',\n    headers: {\n      \"Content-type\": \"application/x-www-form-urlencoded\",\n      'Accept': 'application/json',\n      'Authorization': 'Token 3eda3bbfca53f9d28f51fa591a5ed6ff81e5a78a'\n    }\n  });\n  const data = await res.json();\n  return {\n    data\n  };\n};","map":{"version":3,"sources":["J:\\Project\\ReactLims\\pages\\Sample.js"],"names":["React","ReactDom","App","store","Provider","fetch","TableBody","SampleForm","table_header","table_body","data","console","log","id","name","client","Sample","Component","make_table","table","key","push","render","body","props","getInitialProps","res","method","headers","json"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAIA,MAAMC,YAAY,GAAG,CAAC,WAAD,EAAc,QAAd,EAAwB,MAAxB,CAArB;;AACA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAMG,EAAE,GAAGH,IAAI,CAACG,EAAhB;AACA,QAAMC,IAAI,GAAGJ,IAAI,CAACI,IAAlB;AACA,QAAMC,MAAM,GAAGL,IAAI,CAACK,MAAL,CAAYD,IAA3B;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBD,EAAjB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,IAAL,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,MAAL,CAHJ,CADJ;AAOH,CAZD;;AAaA,eAAe,MAAMC,MAAN,SAAqBhB,KAAK,CAACiB,SAA3B,CAAqC;AAChDC,EAAAA,UAAU,CAACR,IAAD,EAAO;AACb,QAAIS,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,GAAT,IAAgBV,IAAhB,EAAsB;AAClBS,MAAAA,KAAK,CAACE,IAAN,CAAWZ,UAAU,CAACC,IAAI,CAACU,GAAD,CAAL,CAArB;AACH;;AACD,WAAOD,KAAP;AACH;;AACDG,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,mBAAb;AACA,WACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEpB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,MAAC,GAAD;AAAK,MAAA,IAAI,EAAE,MAAC,SAAD;AAAW,QAAA,MAAM,EAAEK,YAAnB;AAAiC,QAAA,IAAI,EAAE,KAAKU,UAAL,CAAgB,KAAKM,KAAL,CAAWd,IAA3B,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAhB+C;;AAmBpDM,MAAM,CAACS,eAAP,GAAyB,kBAAkB;AACvC,QAAMC,GAAG,GAAG,MAAMrB,KAAK,CAAC,mCAAD,EAAsC;AACzDsB,IAAAA,MAAM,EAAE,KADiD;AAEzDC,IAAAA,OAAO,EAAE;AACL,sBAAgB,mCADX;AAEL,gBAAU,kBAFL;AAGL,uBAAiB;AAHZ;AAFgD,GAAtC,CAAvB;AAQA,QAAMlB,IAAI,GAAG,MAAMgB,GAAG,CAACG,IAAJ,EAAnB;AACA,SAAO;AACHnB,IAAAA;AADG,GAAP;AAGH,CAbD","sourcesContent":["import React from 'react'\r\nimport ReactDom from 'react-dom'\r\nimport App from '../Components/App'\r\nimport store from '../Reducers/Reducer'\r\nimport { Provider } from 'react-redux'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport TableBody from '../Components/Table'\r\nimport SampleForm from '../Components/SampleForm'\r\n\r\n\r\n\r\nconst table_header = [\"Sample id\", \"client\", \"name\"]\r\nconst table_body = (data) => {\r\n    console.log(data)\r\n    const id = data.id\r\n    const name = data.name\r\n    const client = data.client.name\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\">{id}</th>\r\n            <td>{name}</td>\r\n            <td>{client}</td>\r\n        </tr>\r\n    )\r\n}\r\nexport default class Sample extends React.Component {\r\n    make_table(data) {\r\n        var table = []\r\n        for (var key in data) {\r\n            table.push(table_body(data[key]))\r\n        }\r\n        return table\r\n    }\r\n    render() {\r\n        const body = 'Welcome to Sample'\r\n        return (\r\n            <Provider store={store}>\r\n                <SampleForm />\r\n                <App body={<TableBody header={table_header} body={this.make_table(this.props.data)} />} />\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n\r\nSample.getInitialProps = async function () {\r\n    const res = await fetch('http://127.0.0.1:8000/lab/Sample/', {\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-type\": \"application/x-www-form-urlencoded\",\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Token 3eda3bbfca53f9d28f51fa591a5ed6ff81e5a78a'\r\n        }\r\n    })\r\n    const data = await res.json()\r\n    return {\r\n        data\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}